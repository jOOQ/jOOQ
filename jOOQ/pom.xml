<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-parent</artifactId>
        <version>3.19.0-SNAPSHOT</version>
    </parent>

    <artifactId>jooq</artifactId>
    <name>jOOQ</name>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.jooq.org/inc/LICENSE.txt</url>
            <distribution>repo</distribution>
        </license>







    </licenses>

    <properties>
        <!-- Use -Dcheckerframework.checkers=checker to switch which checkers are run. -->
        <!-- Running the Index Checker takes very long but is needed to put implicit annotations in class files. -->
        <checkerframework.checkers>org.checkerframework.checker.index.IndexChecker,org.checkerframework.checker.nullness.NullnessChecker,org.checkerframework.checker.signedness.SignednessChecker</checkerframework.checkers>

        <!-- Index checker warnings are disabled by default, because not all code is annotated by index checker annotations.
             Use -Dcheckerframework.suppress=none to show index checker warnings.  -->
        <checkerframework.suppress>index</checkerframework.suppress>

        <!-- Additional argument passed to the java compiler. Use to pass additional arguments
             to the checker framework. Example: -Ashowchecks -->
        <checkerframework.extraargs></checkerframework.extraargs>

        <!-- Additional argument passed to the java compiler. Use to pass additional arguments
             to the checker framework. Example: -Aannotations -->
        <checkerframework.extraargs2></checkerframework.extraargs2>

        <!-- Use -Djavac.verbose=true to compile with the verbose option.
             This is used when you want to see stub parser warnings. -->
        <javac.verbose>false</javac.verbose>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                    </supportedProjectTypes>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Export-Package>*</Export-Package>
                        
                        <!-- [#12408] Some of these are resolved by introspecting reflective usage -->
                        <Import-Package>
                            jakarta.persistence;resolution:=optional,
                            org.slf4j;resolution:=optional;version="[1.7,2)",
                            com.fasterxml.jackson.databind;resolution:=optional,
                            com.fasterxml.jackson.module.kotlin;resolution:=optional,
                            com.google.gson;resolution:=optional,
                            *
                        </Import-Package>
                        <_versionpolicy>[$(version;==;$(@)),$(version;+;$(@)))</_versionpolicy>
                    </instructions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                        <manifestEntries>
                            <Automatic-Module-Name>org.jooq</Automatic-Module-Name>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <!-- This plugin will set properties values using dependency information -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>properties</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <compilerArguments>
                        <Xmaxerrs>10000</Xmaxerrs>
                        <Xmaxwarns>10000</Xmaxwarns>
                    </compilerArguments>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>org.checkerframework</groupId>
                            <artifactId>checker</artifactId>
                            <version>${checker-framework.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <showWarnings>true</showWarnings>
                    <!-- Default is verbose off, so you won't see stub parser warnings. -->
                    <verbose>${javac.verbose}</verbose>
                    <annotationProcessors>
                        <annotationProcessor>${checkerframework.checkers}</annotationProcessor>
                    </annotationProcessors>
                    <compilerArgs combine.children="append">
                        <arg>${checkerframework.extraargs}</arg>
                        <arg>${checkerframework.extraargs2}</arg>
                        <!-- Default is supress all index checker warnings. -->
                        <arg>-AsuppressWarnings=${checkerframework.suppress}</arg>
                        <arg>-XDignore.symbol.file</arg>  <!-- suppress any warnings for using 'Unsafe' -->
                        <arg>-AuseDefaultsForUncheckedCode=source,bytecode</arg>
                        <arg>-AshowSuppressWarningsStrings</arg>
                        <arg>-AwarnUnneededSuppressions</arg>
                    </compilerArgs>
                </configuration>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <skipMain>${main-compile.skip}</skipMain>
                            <compilerArgs combine.children="append">
                                <arg>-Awarns</arg>  <!-- Treat checker errors as warnings. -->
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>show-profiles</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>active-profiles</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <configuration>
    
                        <!-- [#13703] Validate at least HTML correctness -->
                        <additionalparam>-Xdoclint:html</additionalparam>
                        <additionalOptions>-Xdoclint:html</additionalOptions>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencies>
        <dependency>
            <groupId>io.r2dbc</groupId>
            <artifactId>r2dbc-spi</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
        </dependency>

        <!-- From JDK 9 onwards, the JAXB dependency needs to be made explicit
        
             [#7649] The dependency can cause trouble in older JDKs, so it needs to be
             excluded from pre-java-9 builds: https://github.com/jOOQ/jOOQ/issues/7649
             [#13047] The dependency is now optional. Users can opt in to using this
             dependency if they need, by making it explicit on their end. 
          -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <optional>true</optional>
        </dependency>
        
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <version>${checker-framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-util</artifactId>
            <version>${checker-framework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker</artifactId>
            <version>${checker-framework.version}</version>
        </dependency>












    </dependencies>

    <profiles>
        <profile>
            <id>jdk9plus</id>
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <configuration>
                            <fork>true</fork>
                            <maxmem>6000m</maxmem>
                            <compilerArgs combine.children="append">
                                <!-- -options: To not get a warning about missing bootstrap classpath for Java 8 (once we use Java 9) -->
                                <arg>-Xlint:-options</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
                                <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
                                <arg>-Xlint:-removal</arg>
                                <arg>-Xlint:-varargs</arg>
                            </compilerArgs>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>



</project>
