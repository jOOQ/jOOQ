/*
 * This file is generated by jOOQ.
 */
package org.jooq.meta.postgres.pg_catalog.tables;


import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.meta.postgres.pg_catalog.PgCatalog;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PgDepend extends TableImpl<Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>pg_catalog.pg_depend</code>
     */
    public static final PgDepend PG_DEPEND = new PgDepend();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>pg_catalog.pg_depend.classid</code>.
     */
    public final TableField<Record, Long> CLASSID = createField(DSL.name("classid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_depend.objid</code>.
     */
    public final TableField<Record, Long> OBJID = createField(DSL.name("objid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_depend.objsubid</code>.
     */
    public final TableField<Record, Integer> OBJSUBID = createField(DSL.name("objsubid"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_depend.refclassid</code>.
     */
    public final TableField<Record, Long> REFCLASSID = createField(DSL.name("refclassid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_depend.refobjid</code>.
     */
    public final TableField<Record, Long> REFOBJID = createField(DSL.name("refobjid"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_depend.refobjsubid</code>.
     */
    public final TableField<Record, Integer> REFOBJSUBID = createField(DSL.name("refobjsubid"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>pg_catalog.pg_depend.deptype</code>.
     */
    public final TableField<Record, String> DEPTYPE = createField(DSL.name("deptype"), SQLDataType.CHAR.nullable(false), this, "");

    private PgDepend(Name alias, Table<Record> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private PgDepend(Name alias, Table<Record> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_depend</code> table reference
     */
    public PgDepend(String alias) {
        this(DSL.name(alias), PG_DEPEND);
    }

    /**
     * Create an aliased <code>pg_catalog.pg_depend</code> table reference
     */
    public PgDepend(Name alias) {
        this(alias, PG_DEPEND);
    }

    /**
     * Create a <code>pg_catalog.pg_depend</code> table reference
     */
    public PgDepend() {
        this(DSL.name("pg_depend"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : PgCatalog.PG_CATALOG;
    }

    @Override
    public PgDepend as(String alias) {
        return new PgDepend(DSL.name(alias), this);
    }

    @Override
    public PgDepend as(Name alias) {
        return new PgDepend(alias, this);
    }

    @Override
    public PgDepend as(Table<?> alias) {
        return new PgDepend(alias.getQualifiedName(), this);
    }
}
