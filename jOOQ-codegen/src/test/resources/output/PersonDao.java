/**
 * This class is generated by jOOQ
 */
package test_java.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import test_java.tables.Person;
import test_java.tables.records.PersonRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonDao extends DAOImpl<PersonRecord, test_java.tables.pojos.Person, Integer> {

	/**
	 * Create a new PersonDao without any configuration
	 */
	public PersonDao() {
		super(Person.PERSON, test_java.tables.pojos.Person.class);
	}

	/**
	 * Create a new PersonDao with an attached configuration
	 */
	public PersonDao(Configuration configuration) {
		super(Person.PERSON, test_java.tables.pojos.Person.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(test_java.tables.pojos.Person object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public List<test_java.tables.pojos.Person> fetchById(Integer... values) {
		return fetch(Person.PERSON.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	public test_java.tables.pojos.Person fetchOneById(Integer value) {
		return fetchOne(Person.PERSON.ID, value);
	}

	/**
	 * Fetch records that have <code>NAME IN (values)</code>
	 */
	public List<test_java.tables.pojos.Person> fetchByName(String... values) {
		return fetch(Person.PERSON.NAME, values);
	}
}
